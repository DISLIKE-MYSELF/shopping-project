services:
  db:
    image: mysql:8.0
    container_name: shop_db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/mysql-config:/etc/mysql/conf.d
    ports:
      - '3306:3306'
    networks:
      shop-net:
        aliases:
            - database
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      retries: 5
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-character-set-client-handshake

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: shop_backend
    env_file:
      - .env
    environment:
      TZ: UTC
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/${MYSQL_DATABASE}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shop-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 15s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: shop_frontend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_VERSION: ${REACT_APP_VERSION}
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    command: sh -c "cd /app/react-app && npm install && npm run dev-docker"
    ports:
      - '5173:5173'
    depends_on:
      - backend
    networks:
      - shop-net
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5173']
      interval: 10s
      retries: 3

volumes:
  db_data:

networks:
  shop-net:
    driver: bridge
